##
## Gets random fact about the house, which is displayed on the led sign
##

>
  {%- macro uv() -%}
    UV-Index: {{ states.sensor.dark_sky_uv_index.state }}
  {%- endmacro -%}

  {%- macro ad() -%}
    Blocked Ads: {{ float(states('sensor.adguard_dns_queries_blocked_ratio')) | round(1) | replace('.', ',') }} %
  {%- endmacro -%}

  {%- macro au() -%}
    Aussentemp. {{ float(states('sensor.dark_sky_temperature')) | replace('.', ',') }}
  {%- endmacro -%}

  {%- macro bad() -%}
    Badtemp. {{ float(states('sensor.bathroom_temperature_temperature')) | replace('.', ',') }}
  {%- endmacro -%}

  {%- macro win() -%}
    Winterg.Temp. {{ float(states('sensor.living_room_temperature_temperature')) | replace('.', ',') }}
  {%- endmacro -%}

  {%- macro tim() -%}
    {{ float(states('sensor.time')) }} Uhr
  {%- endmacro -%}

  {%- macro print() -%}
    {%- if (states('sensor.octoprint_job_percentage') | float > 0.00) or (states('sensor.octoprint_job_percentage') | float < 100.00) -%}
      {{ states('sensor.octoprint_job_percentage') }} % abgeschlossen
    {%- else -%}
      Kein 3D Druck
    {%- endif -%}
  {%- endmacro -%}

  {%- macro lights_on() -%}
    {% set lights = [ states.light.living_room_left,
      states.light.living_room_right,
      states.light.kitchen_lamp,
      states.light.schreibtischlampe,
      states.light.storage_room_lamp,
      states.light.workspace_strip,
      states.light.living_room_strip,
      states.light.dining_table,
      states.light.dining_table_ambilight,
      states.light.outdoor_lamp,
      states.light.vestibule_lamp,
      states.light.hall_strip,
      states.light.storage_room_whiteboard
    ] %}
    {{ lights | selectattr('state','eq','on') | list | count }} einge. Lampen
  {%- endmacro -%}
  {%- macro windows_open() -%}
    {% set windows = [ 
    states.binary_sensor.bedroom_window_left_contact,
    states.binary_sensor.living_room_window_contact,
    states.binary_sensor.workspace_window_left_contact,
    states.binary_sensor.bathroom_window_contact,
    states.binary_sensor.kitchen_window_contact
    ] %}
    {{ windows | selectattr('state','eq','on') | list | count }} Fenster offen
  {%- endmacro -%}
  {%- macro last_clean() -%}
    {% set a = state_attr('vacuum.rockrobo', 'last_run_stats') ['endTime'] %}
    Letztes Saugen: {{ ( a | int  / 1000 ) | timestamp_custom("%d.%m um %H:%M") }}
  {%- endmacro -%}

  {{ ([last_clean,lights_on,print,ad,au,bad,win,windows_open]|random)() }}
