- platform: template
  sensors:
    ## Sets the HVAC Temperature
    arbeitszimmer_set_temperature_ot:
      friendly_name: OpenTherm Set Temperatur
      unit_of_measurement: "Â°C"
      value_template: '{{state_attr("climate.thermostat", "temperature")}}'
    fabi_in_bed:
      friendly_name: "Fabi im Bett"
      value_template: >
        {{ states('sensor.add_bed_weight')|float >= 60.0 }}
    lelo_in_bed:
      friendly_name: "Lelo im Bett"
      value_template: >
        {{ states('sensor.add_bed_weight')|float > 40.0
          and (states('sensor.add_bed_weight')|float < 60.0
               or states('sensor.add_bed_weight')|float >= 100.0)}}
    add_bed_weight:
      friendly_name: "Gesamtgewicht Bett"
      value_template: >
        {{ ((states('sensor.fabi_weight') | float) + (states('sensor.lelo_weight') | float)) | round(2) }}

    vacuum_battery:
      friendly_name: "Vacuum Battery"
      unit_of_measurement: "%"
      value_template: "{{ state_attr('vacuum.rockrobo', 'battery_level') }}"

    ## Days until next hard coded event
    until_christ:
      friendly_name: "Tage bis Weihnachten"
      unit_of_measurement: "days"
      value_template: '{{ (( as_timestamp(strptime("2020-12-24 00:00:00" , "%Y-%m-%dT%H:%M:%S")) - as_timestamp(now()) )/ (3600*24)) | round(0) }}'

    num_in_master_bed:
      friendly_name: "Anzahl Personen im Bett"
      unit_of_measurement: "Personen"
      value_template: >-
        {% if is_state('sensor.fabi_in_bed', 'True') and is_state('sensor.lelo_in_bed', 'True') %}
            2
        {% elif is_state('sensor.fabi_in_bed', 'True') or is_state('sensor.lelo_in_bed', 'True') %}
            1
        {% else %}
            0
        {% endif %}

    garbage_collection:
      friendly_name: "MÃ¼lltonne raus"
      value_template: >
        {% set e = strptime(
             states.calendar.muelltonne.attributes['start_time'],
             '%Y-%m-%d %H:%M:%S') %}
        {{ e.strftime('%j')|int - now().strftime('%j')|int == 1 and now().hour >= 9 }}
